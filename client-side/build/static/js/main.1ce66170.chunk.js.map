{"version":3,"sources":["components/chat/config.js","components/chat/BottomBar.js","components/chat/App.js","components/index.js","App.js","index.js"],"names":["development","endpoint","proxy","production","window","location","hostname","useStyles","makeStyles","theme","appBar","bottom","top","inputContainer","backgroundColor","fade","palette","common","white","borderRadius","shape","marginLeft","spacing","position","width","icon","height","pointerEvents","display","alignItems","justifyContent","inputRoot","color","inputInput","padding","BottomBar","props","classes","AppBar","className","Toolbar","style","maxWidth","InputBase","onChange","handleName","value","name","placeholder","root","input","inputProps","onSubmit","handleSubmit","handleContent","content","App","state","chat","this","socket","io","config","on","msg","setState","reverse","scrollToBottom","event","target","console","log","preventDefault","emit","document","getElementById","scrollTop","scrollHeight","Paper","id","elevation","map","el","index","key","Typography","variant","bind","React","Component","Main","to","exact","path","Home","About","Dashboard","ReactDOM","render"],"mappings":"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","file":"static/js/main.1ce66170.chunk.js","sourcesContent":["import pkg from '../../../package.json';\n\nexport default {\n  development: {\n    endpoint: pkg.proxy\n  },\n  production: {\n    endpoint: window.location.hostname\n  }\n}","import React from 'react';\n\nimport { fade, makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport InputBase from '@material-ui/core/InputBase';\nimport Toolbar from '@material-ui/core/Toolbar';\n\nimport ChatIcon from '@material-ui/icons/Chat';\nimport FaceIcon from '@material-ui/icons/Face';\n\nconst useStyles = makeStyles(theme => ({\n  appBar: {\n    bottom: 0,\n    top: 'auto',\n  },\n  inputContainer: {\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    borderRadius: theme.shape.borderRadius,\n    marginLeft: theme.spacing(1),\n    position: 'relative',\n    width: '100%',\n  },\n  icon: {\n    width: theme.spacing(7),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'inherit',\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 7),\n    width: '100%',\n  },\n}));\n\nexport default function BottomBar(props) {\n  const classes = useStyles();\n\n  return (\n    <AppBar position=\"fixed\" className={classes.appBar}>\n      <Toolbar>\n        <div className={classes.inputContainer} style={{maxWidth: '200px'}}>\n          <div className={classes.icon}>\n            <FaceIcon />\n          </div>\n          <InputBase\n            onChange={props.handleName}\n            value={props.name}\n            placeholder=\"Name\"\n            classes={{\n              root: classes.inputRoot,\n              input: classes.inputInput,\n            }}\n            inputProps={{ 'aria-label': 'name' }}\n          />\n        </div>\n        <div className={classes.inputContainer}>\n          <form onSubmit={props.handleSubmit}>\n            <div className={classes.icon}>\n              <ChatIcon />\n            </div>\n            <InputBase\n              onChange={props.handleContent}\n              value={props.content}\n              placeholder=\"Type your message...\"\n              classes={{\n                root: classes.inputRoot,\n                input: classes.inputInput,\n              }}\n              inputProps={{ 'aria-label': 'content' }}\n            />\n          </form>\n        </div>\n      </Toolbar>\n    </AppBar>\n  );\n}","import React from 'react';\nimport config from './config';\nimport io from 'socket.io-client';\n\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\n\nimport BottomBar from './BottomBar';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      chat: [],\n      content: '',\n      name: '',\n    };\n  }\n\n  componentDidMount() {\n    this.socket = io(config[process.env.NODE_ENV].endpoint);\n\n    // Load the last 10 messages in the window.\n    this.socket.on('init', (msg) => {\n      this.setState((state) => ({\n        chat: [...state.chat, ...msg.reverse()],\n      }), this.scrollToBottom);\n    });\n\n    // Update the chat if a new message is broadcasted.\n    this.socket.on('push', (msg) => {\n      this.setState((state) => ({\n        chat: [...state.chat, msg],\n      }), this.scrollToBottom);\n    });\n  }\n\n  // Save the message the user is typing in the input field.\n  handleContent(event) {\n    this.setState({\n      content: event.target.value,\n    });\n  }\n\n  //\n  handleName(event) {\n    this.setState({\n      name: event.target.value,\n    });\n  }\n\n  // When the user is posting a new message.\n  handleSubmit(event) {\n    console.log(event);\n\n    // Prevent the form to reload the current page.\n    event.preventDefault();\n\n    this.setState((state) => {\n      console.log(state);\n      console.log('this', this.socket);\n      // Send the new message to the server.\n      this.socket.emit('message', {\n        name: state.name,\n        content: state.content,\n      });\n\n      // Update the chat with the user's message and remove the current message.\n      return {\n        chat: [...state.chat, {\n          name: state.name,\n          content: state.content,\n        }],\n        content: '',\n      };\n    }, this.scrollToBottom);\n  }\n\n  // Always make sure the window is scrolled down to the last message.\n  scrollToBottom() {\n    const chat = document.getElementById('chat');\n    chat.scrollTop = chat.scrollHeight;\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Paper id=\"chat\" elevation={3}>\n          {this.state.chat.map((el, index) => {\n            return (\n              <div key={index}>\n                <Typography variant=\"caption\" className=\"name\">\n                  {el.name}\n                </Typography>\n                <Typography variant=\"body1\" className=\"content\">\n                  {el.content}\n                </Typography>\n              </div>\n            );\n          })}\n        </Paper>\n        <BottomBar\n          content={this.state.content}\n          handleContent={this.handleContent.bind(this)}\n          handleName={this.handleName.bind(this)}\n          handleSubmit={this.handleSubmit.bind(this)}\n          name={this.state.name}\n        />\n      </div>\n    );\n  }\n};\n\nexport default App;","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport App from './chat/App';\n\n// This site has 3 pages, all of which are rendered\n// dynamically in the browser (not server rendered).\n//\n// Although the page does not ever refresh, notice how\n// React Router keeps the URL up to date as you navigate\n// through the site. This preserves the browser history,\n// making sure things like the back button and bookmarks\n// work properly.\n\nexport default function Main() {\n  return (\n    <Router>\n      <div>\n        <ul>\n          <li>\n            <Link to=\"/\">Home</Link>\n          </li>\n          <li>\n            <Link to=\"/about\">About</Link>\n          </li>\n          <li>\n            <Link to=\"/dashboard\">Dashboard</Link>\n          </li>\n        </ul>\n\n        <hr />\n\n        {/*\n          A <Switch> looks through all its children <Route>\n          elements and renders the first one whose path\n          matches the current URL. Use a <Switch> any time\n          you have multiple routes, but you want only one\n          of them to render at a time\n        */}\n        <Switch>\n          <Route exact path=\"/\">\n            <Home />\n          </Route>\n          <Route path=\"/about\">\n            <About />\n          </Route>\n          <Route path=\"/dashboard\">\n            <Dashboard />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\n// You can think of these components as \"pages\"\n// in your app.\n\nfunction Home() {\n  return (\n    <div>\n      <h2>Home</h2>\n    </div>\n  );\n}\n\nfunction About() {\n  return (\n    <div>\n      <h2>About</h2>\n    </div>\n  );\n}\n\nfunction Dashboard() {\n  return (\n     <App/>\n  );\n}\n\n","import React from \"react\";\n\nimport Main from './components/index';\n\nfunction App() {\n  return (\n    <Main/>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}